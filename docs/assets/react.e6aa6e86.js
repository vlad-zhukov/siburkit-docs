import{j as s,a as o,F as B,r as i}from"./index.828fd1d0.js";import{_ as m}from"./index.128d4aa1.js";import"./Popover.module.d8c1af90.js";import{_ as D}from"./index.cb7407fe.js";function E(n={}){const{wrapper:e}=n.components||{};return e?s(e,{...n,children:s(c,{})}):c();function c(){const a=Object.assign({p:"p",code:"code",a:"a",h2:"h2",div:"div"},n.components),{CodePreview:t}=a;return t||C("CodePreview",!0),o(B,{children:[o(a.p,{children:[s(a.code,{children:"Menu"}),` (\u043C\u0435\u043D\u044E) \u2014 \u044D\u0442\u043E \u043D\u0438\u0437\u043A\u043E\u0443\u0440\u043E\u0432\u043D\u0435\u0432\u044B\u0439 \u043A\u043E\u043C\u043F\u043E\u043D\u0435\u043D\u0442, \u0438\u0441\u043F\u043E\u043B\u044C\u0437\u0443\u044E\u0449\u0438\u0439\u0441\u044F \u0434\u043B\u044F \u0441\u043E\u0437\u0434\u0430\u043D\u0438\u044F
\u0440\u0430\u0437\u043D\u043E\u0433\u043E \u0440\u043E\u0434\u0430 \u0432\u044B\u043F\u0430\u0434\u0430\u044E\u0449\u0438\u0445 \u0441\u043F\u0438\u0441\u043A\u043E\u0432, \u043D\u0430\u043F\u0440\u0438\u043C\u0435\u0440 `,s(a.code,{children:"Dropdown"}),`. \u0421\u043E\u043E\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u043F\u0430\u0442\u0442\u0435\u0440\u043D\u0443
`,s(a.a,{href:"https://www.w3.org/TR/wai-aria-1.2/#listbox",children:"WAI-ARIA Listbox"}),"."]}),`
`,s(a.h2,{children:"\u0423\u0441\u0442\u0430\u043D\u043E\u0432\u043A\u0430"}),`
`,o(a.p,{children:["\u0423\u0441\u0442\u0430\u043D\u043E\u0432\u0438\u0442\u0435 \u0431\u0438\u0431\u043B\u0438\u043E\u0442\u0435\u043A\u0443 ",s(a.code,{children:"@siburkit/menu"})," \u0438\u0437 \u043D\u0430\u0448\u0435\u0433\u043E npm."]}),`
`,s(t,{code:`<pre class="shiki one-dark-pro" style="background-color: #282c34; color: #abb2bf"><div class="language-id">shell</div><div class='code-container'><code><div class='line'><span style="color: #ABB2BF">npm install @siburkit/menu</span></div></code></div></pre>`}),`
`,s(a.h2,{children:"\u0418\u0441\u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u043D\u0438\u0435"}),`
`,s(t,{code:`<pre class="shiki one-dark-pro twoslash lsp" style="background-color: #282c34; color: #abb2bf" preview="true"><div class="language-id">tsx</div><div class='code-container'><code><div class='line'><span style="color: #C678DD">import</span><span style="color: #ABB2BF"> { </span><span style="color: #E06C75"><data-lsp lsp='(alias) function Menu&lt;AdditionalData>({ menuRef, onSelect, highlightOnMount, className, children, }: MenuProps&lt;AdditionalData>): JSX.Element&#10;import Menu' >Menu</data-lsp></span><span style="color: #ABB2BF">, </span><span style="color: #E06C75"><data-lsp lsp='(alias) function MenuItem({ value, additionalData, className, children }: MenuItemProps): JSX.Element&#10;import MenuItem' >MenuItem</data-lsp></span><span style="color: #ABB2BF">, </span><span style="color: #E06C75">type</span><span style="color: #ABB2BF"> </span><span style="color: #E06C75"><data-lsp lsp='(alias) interface MenuRef&#10;import MenuRef' >MenuRef</data-lsp></span><span style="color: #ABB2BF"> } </span><span style="color: #C678DD">from</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">&apos;@siburkit/menu&apos;</span><span style="color: #ABB2BF">;</span></div><div class='line'>&nbsp;</div><div class='line'><span style="color: #C678DD">const</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B"><data-lsp lsp='const blockColors: string[]' >blockColors</data-lsp></span><span style="color: #ABB2BF"> </span><span style="color: #56B6C2">=</span><span style="color: #ABB2BF"> [</span></div><div class='line'><span style="color: #ABB2BF">    </span><span style="color: #98C379">&apos;lavenderblush&apos;</span><span style="color: #ABB2BF">,</span></div><div class='line'><span style="color: #ABB2BF">    </span><span style="color: #98C379">&apos;ghostwhite&apos;</span><span style="color: #ABB2BF">,</span></div><div class='line'><span style="color: #ABB2BF">    </span><span style="color: #98C379">&apos;aliceblue&apos;</span><span style="color: #ABB2BF">,</span></div><div class='line'><span style="color: #ABB2BF">    </span><span style="color: #98C379">&apos;azure&apos;</span><span style="color: #ABB2BF">,</span></div><div class='line'><span style="color: #ABB2BF">    </span><span style="color: #98C379">&apos;honeydew&apos;</span><span style="color: #ABB2BF">,</span></div><div class='line'><span style="color: #ABB2BF">    </span><span style="color: #98C379">&apos;beige&apos;</span><span style="color: #ABB2BF">,</span></div><div class='line'><span style="color: #ABB2BF">    </span><span style="color: #98C379">&apos;oldlace&apos;</span><span style="color: #ABB2BF">,</span></div><div class='line'><span style="color: #ABB2BF">    </span><span style="color: #98C379">&apos;seashell&apos;</span><span style="color: #ABB2BF">,</span></div><div class='line'><span style="color: #ABB2BF">    </span><span style="color: #98C379">&apos;linen&apos;</span><span style="color: #ABB2BF">,</span></div><div class='line'><span style="color: #ABB2BF">    </span><span style="color: #98C379">&apos;mistyrose&apos;</span><span style="color: #ABB2BF">,</span></div><div class='line'><span style="color: #ABB2BF">];</span></div><div class='line'>&nbsp;</div><div class='line'><span style="color: #C678DD">export</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">default</span><span style="color: #ABB2BF"> () </span><span style="color: #C678DD">=&gt;</span><span style="color: #ABB2BF"> {</span></div><div class='line'><span style="color: #ABB2BF">    </span><span style="color: #C678DD">const</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B"><data-lsp lsp='const menuRef: React.RefObject&lt;MenuRef>' >menuRef</data-lsp></span><span style="color: #ABB2BF"> </span><span style="color: #56B6C2">=</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B"><data-lsp lsp='(alias) namespace React&#10;import React' >React</data-lsp></span><span style="color: #ABB2BF">.</span><span style="color: #61AFEF"><data-lsp lsp='function React.useRef&lt;MenuRef>(initialValue: MenuRef | null): React.RefObject&lt;MenuRef> (+2 overloads)' >useRef</data-lsp></span><span style="color: #ABB2BF">&lt;</span><span style="color: #E5C07B"><data-lsp lsp='(alias) interface MenuRef&#10;import MenuRef' >MenuRef</data-lsp></span><span style="color: #ABB2BF">&gt;(</span><span style="color: #D19A66">null</span><span style="color: #ABB2BF">);</span></div><div class='line'><span style="color: #ABB2BF">    </span><span style="color: #C678DD">const</span><span style="color: #ABB2BF"> [</span><span style="color: #E5C07B"><data-lsp lsp='const showMenu: boolean' >showMenu</data-lsp></span><span style="color: #ABB2BF">, </span><span style="color: #E5C07B"><data-lsp lsp='const setShowMenu: React.Dispatch&lt;React.SetStateAction&lt;boolean>>' >setShowMenu</data-lsp></span><span style="color: #ABB2BF">] </span><span style="color: #56B6C2">=</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B"><data-lsp lsp='(alias) namespace React&#10;import React' >React</data-lsp></span><span style="color: #ABB2BF">.</span><span style="color: #61AFEF"><data-lsp lsp='function React.useState&lt;boolean>(initialState: boolean | (() => boolean)): [boolean, React.Dispatch&lt;React.SetStateAction&lt;boolean>>] (+1 overload)' >useState</data-lsp></span><span style="color: #ABB2BF">(</span><span style="color: #D19A66">false</span><span style="color: #ABB2BF">);</span></div><div class='line'>&nbsp;</div><div class='line'><span style="color: #ABB2BF">    </span><span style="color: #C678DD">return</span><span style="color: #ABB2BF"> (</span></div><div class='line'><span style="color: #ABB2BF">        &lt;&gt;</span></div><div class='line'><span style="color: #ABB2BF">            &lt;</span><span style="color: #E5C07B"><data-lsp lsp='(alias) const Button: React.ForwardRefExoticComponent&lt;ButtonProps &amp; React.RefAttributes&lt;HTMLButtonElement>>&#10;import Button' >Button</data-lsp></span></div><div class='line'><span style="color: #ABB2BF">                </span><span style="color: #D19A66"><data-lsp lsp='(property) onClick?: React.MouseEventHandler&lt;HTMLButtonElement> | undefined' >onClick</data-lsp></span><span style="color: #56B6C2">=</span><span style="color: #C678DD">{</span><span style="color: #ABB2BF">() </span><span style="color: #C678DD">=&gt;</span><span style="color: #ABB2BF"> {</span></div><div class='line'><span style="color: #ABB2BF">                    </span><span style="color: #61AFEF"><data-lsp lsp='const setShowMenu: (value: React.SetStateAction&lt;boolean>) => void' >setShowMenu</data-lsp></span><span style="color: #ABB2BF">((</span><span style="color: #E06C75"><data-lsp lsp='(parameter) s: boolean' >s</data-lsp></span><span style="color: #ABB2BF">) </span><span style="color: #C678DD">=&gt;</span><span style="color: #ABB2BF"> </span><span style="color: #56B6C2">!</span><span style="color: #E06C75"><data-lsp lsp='(parameter) s: boolean' >s</data-lsp></span><span style="color: #ABB2BF">);</span></div><div class='line'><span style="color: #ABB2BF">                }</span><span style="color: #C678DD">}</span></div><div class='line'><span style="color: #ABB2BF">                </span><span style="color: #D19A66"><data-lsp lsp='(property) onKeyDown?: React.KeyboardEventHandler&lt;HTMLButtonElement> | undefined' >onKeyDown</data-lsp></span><span style="color: #56B6C2">=</span><span style="color: #C678DD">{</span><span style="color: #ABB2BF">(</span><span style="color: #E06C75"><data-lsp lsp='(parameter) evt: React.KeyboardEvent&lt;HTMLButtonElement>' >evt</data-lsp></span><span style="color: #ABB2BF">) </span><span style="color: #C678DD">=&gt;</span><span style="color: #ABB2BF"> {</span></div><div class='line'><span style="color: #ABB2BF">                    </span><span style="color: #C678DD">if</span><span style="color: #ABB2BF"> (</span><span style="color: #E5C07B"><data-lsp lsp='const menuRef: React.RefObject&lt;MenuRef>' >menuRef</data-lsp></span><span style="color: #ABB2BF">.</span><span style="color: #E06C75"><data-lsp lsp='(property) React.RefObject&lt;MenuRef>.current: MenuRef | null' >current</data-lsp></span><span style="color: #ABB2BF">) {</span></div><div class='line'><span style="color: #ABB2BF">                        </span><span style="color: #E5C07B"><data-lsp lsp='const menuRef: React.RefObject&lt;MenuRef>' >menuRef</data-lsp></span><span style="color: #ABB2BF">.</span><span style="color: #E5C07B"><data-lsp lsp='(property) React.RefObject&lt;MenuRef>.current: MenuRef' >current</data-lsp></span><span style="color: #ABB2BF">.</span><span style="color: #61AFEF"><data-lsp lsp='(property) MenuRef.onKeyDown: (event: React.KeyboardEvent&lt;Element>) => void' >onKeyDown</data-lsp></span><span style="color: #ABB2BF">(</span><span style="color: #E06C75"><data-lsp lsp='(parameter) evt: React.KeyboardEvent&lt;HTMLButtonElement>' >evt</data-lsp></span><span style="color: #ABB2BF">);</span></div><div class='line'><span style="color: #ABB2BF">                    }</span></div><div class='line'><span style="color: #ABB2BF">                }</span><span style="color: #C678DD">}</span></div><div class='line'><span style="color: #ABB2BF">            &gt;</span></div><div class='line'><span style="color: #ABB2BF">                Toggle menu</span></div><div class='line'><span style="color: #ABB2BF">            &lt;/</span><span style="color: #E5C07B"><data-lsp lsp='(alias) const Button: React.ForwardRefExoticComponent&lt;ButtonProps &amp; React.RefAttributes&lt;HTMLButtonElement>>&#10;import Button' >Button</data-lsp></span><span style="color: #ABB2BF">&gt;</span></div><div class='line'><span style="color: #ABB2BF">            &lt;</span><span style="color: #E06C75"><data-lsp lsp='(property) JSX.IntrinsicElements.div: React.DetailedHTMLProps&lt;React.HTMLAttributes&lt;HTMLDivElement>, HTMLDivElement>' >div</data-lsp></span></div><div class='line'><span style="color: #ABB2BF">                </span><span style="color: #D19A66"><data-lsp lsp='(property) React.HTMLAttributes&lt;HTMLDivElement>.style?: React.CSSProperties | undefined' >style</data-lsp></span><span style="color: #56B6C2">=</span><span style="color: #C678DD">{</span><span style="color: #ABB2BF">{</span></div><div class='line'><span style="color: #ABB2BF">                    </span><span style="color: #E06C75"><data-lsp lsp='(property) StandardLonghandProperties&lt;string | number, string &amp; {}>.width?: Property.Width&lt;string | number> | undefined' >width</data-lsp></span><span style="color: #ABB2BF">: </span><span style="color: #D19A66">200</span><span style="color: #ABB2BF">,</span></div><div class='line'><span style="color: #ABB2BF">                    </span><span style="color: #E06C75"><data-lsp lsp='(property) StandardLonghandProperties&lt;string | number, string &amp; {}>.height?: Property.Height&lt;string | number> | undefined' >height</data-lsp></span><span style="color: #ABB2BF">: </span><span style="color: #D19A66">220</span><span style="color: #ABB2BF">,</span></div><div class='line'><span style="color: #ABB2BF">                    </span><span style="color: #E06C75"><data-lsp lsp='(property) StandardLonghandProperties&lt;string | number, string &amp; {}>.marginTop?: Property.MarginTop&lt;string | number> | undefined' >marginTop</data-lsp></span><span style="color: #ABB2BF">: </span><span style="color: #D19A66">8</span><span style="color: #ABB2BF">,</span></div><div class='line'><span style="color: #ABB2BF">                    </span><span style="color: #E06C75"><data-lsp lsp='(property) StandardShorthandProperties&lt;string | number, string &amp; {}>.border?: Property.Border&lt;string | number> | undefined' >border</data-lsp></span><span style="color: #ABB2BF">: </span><span style="color: #98C379">&apos;1px solid #000&apos;</span><span style="color: #ABB2BF">,</span></div><div class='line'><span style="color: #ABB2BF">                }</span><span style="color: #C678DD">}</span></div><div class='line'><span style="color: #ABB2BF">            &gt;</span></div><div class='line'><span style="color: #ABB2BF">                </span><span style="color: #C678DD">{</span><span style="color: #56B6C2">!</span><span style="color: #E06C75"><data-lsp lsp='const showMenu: boolean' >showMenu</data-lsp></span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">?</span><span style="color: #ABB2BF"> </span><span style="color: #D19A66">null</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">:</span><span style="color: #ABB2BF"> (</span></div><div class='line'><span style="color: #ABB2BF">                    &lt;</span><span style="color: #E5C07B"><data-lsp lsp='(alias) function Menu&lt;AdditionalData>({ menuRef, onSelect, highlightOnMount, className, children, }: MenuProps&lt;AdditionalData>): JSX.Element&#10;import Menu' >Menu</data-lsp></span></div><div class='line'><span style="color: #ABB2BF">                        </span><span style="color: #D19A66"><data-lsp lsp='(property) MenuProps&lt;AdditionalData>.menuRef: React.RefObject&lt;MenuRef>' >menuRef</data-lsp></span><span style="color: #56B6C2">=</span><span style="color: #C678DD">{</span><span style="color: #E06C75"><data-lsp lsp='const menuRef: React.RefObject&lt;MenuRef>' >menuRef</data-lsp></span><span style="color: #C678DD">}</span></div><div class='line'><span style="color: #ABB2BF">                        </span><span style="color: #D19A66"><data-lsp lsp='(method) MenuProps&lt;unknown>.onSelect(value: string, additionalData?: unknown): void' >onSelect</data-lsp></span><span style="color: #56B6C2">=</span><span style="color: #C678DD">{</span><span style="color: #ABB2BF">(</span><span style="color: #E06C75"><data-lsp lsp='(parameter) value: string' >value</data-lsp></span><span style="color: #ABB2BF">, </span><span style="color: #E06C75"><data-lsp lsp='(parameter) additionalData: unknown' >additionalData</data-lsp></span><span style="color: #ABB2BF">) </span><span style="color: #C678DD">=&gt;</span><span style="color: #ABB2BF"> {</span></div><div class='line'><span style="color: #ABB2BF">                            </span><span style="color: #7F848E">// Used for tests</span></div><div class='line'><span style="color: #ABB2BF">                            </span><span style="color: #E5C07B"><data-lsp lsp='var console: Console' >console</data-lsp></span><span style="color: #ABB2BF">.</span><span style="color: #61AFEF"><data-lsp lsp='(method) Console.log(...data: any[]): void' >log</data-lsp></span><span style="color: #ABB2BF">(</span><span style="color: #E06C75"><data-lsp lsp='(parameter) value: string' >value</data-lsp></span><span style="color: #ABB2BF">, </span><span style="color: #E06C75"><data-lsp lsp='(parameter) additionalData: unknown' >additionalData</data-lsp></span><span style="color: #ABB2BF">);</span></div><div class='line'><span style="color: #ABB2BF">                        }</span><span style="color: #C678DD">}</span></div><div class='line'><span style="color: #ABB2BF">                    &gt;</span></div><div class='line'><span style="color: #ABB2BF">                        </span><span style="color: #C678DD">{</span><span style="color: #E5C07B"><data-lsp lsp='const blockColors: string[]' >blockColors</data-lsp></span><span style="color: #ABB2BF">.</span><span style="color: #61AFEF"><data-lsp lsp='(method) Array&lt;string>.map&lt;JSX.Element>(callbackfn: (value: string, index: number, array: string[]) => JSX.Element, thisArg?: any): JSX.Element[]' >map</data-lsp></span><span style="color: #ABB2BF">((</span><span style="color: #E06C75"><data-lsp lsp='(parameter) color: string' >color</data-lsp></span><span style="color: #ABB2BF">, </span><span style="color: #E06C75"><data-lsp lsp='(parameter) index: number' >index</data-lsp></span><span style="color: #ABB2BF">) </span><span style="color: #C678DD">=&gt;</span><span style="color: #ABB2BF"> (</span></div><div class='line'><span style="color: #ABB2BF">                            &lt;</span><span style="color: #E5C07B"><data-lsp lsp='(alias) function MenuItem({ value, additionalData, className, children }: MenuItemProps): JSX.Element&#10;import MenuItem' >MenuItem</data-lsp></span></div><div class='line'><span style="color: #ABB2BF">                                </span><span style="color: #D19A66"><data-lsp lsp='(property) React.Attributes.key?: React.Key | null | undefined' >key</data-lsp></span><span style="color: #56B6C2">=</span><span style="color: #C678DD">{</span><span style="color: #E06C75"><data-lsp lsp='(parameter) color: string' >color</data-lsp></span><span style="color: #C678DD">}</span></div><div class='line'><span style="color: #ABB2BF">                                </span><span style="color: #D19A66"><data-lsp lsp='(property) MenuItemProps.value: string' >value</data-lsp></span><span style="color: #56B6C2">=</span><span style="color: #C678DD">{</span><span style="color: #E06C75"><data-lsp lsp='(parameter) color: string' >color</data-lsp></span><span style="color: #C678DD">}</span></div><div class='line'><span style="color: #ABB2BF">                                </span><span style="color: #D19A66"><data-lsp lsp='(property) MenuItemProps.additionalData?: unknown' >additionalData</data-lsp></span><span style="color: #56B6C2">=</span><span style="color: #C678DD">{</span><span style="color: #E06C75"><data-lsp lsp='(parameter) index: number' >index</data-lsp></span><span style="color: #C678DD">}</span></div><div class='line'><span style="color: #ABB2BF">                            &gt;</span></div><div class='line'><span style="color: #ABB2BF">                                </span><span style="color: #C678DD">{</span><span style="color: #E06C75"><data-lsp lsp='(parameter) color: string' >color</data-lsp></span><span style="color: #C678DD">}</span></div><div class='line'><span style="color: #ABB2BF">                            &lt;/</span><span style="color: #E5C07B"><data-lsp lsp='(alias) function MenuItem({ value, additionalData, className, children }: MenuItemProps): JSX.Element&#10;import MenuItem' >MenuItem</data-lsp></span><span style="color: #ABB2BF">&gt;</span></div><div class='line'><span style="color: #ABB2BF">                        ))</span><span style="color: #C678DD">}</span></div><div class='line'><span style="color: #ABB2BF">                    &lt;/</span><span style="color: #E5C07B"><data-lsp lsp='(alias) function Menu&lt;AdditionalData>({ menuRef, onSelect, highlightOnMount, className, children, }: MenuProps&lt;AdditionalData>): JSX.Element&#10;import Menu' >Menu</data-lsp></span><span style="color: #ABB2BF">&gt;</span></div><div class='line'><span style="color: #ABB2BF">                )</span><span style="color: #C678DD">}</span></div><div class='line'><span style="color: #ABB2BF">            &lt;/</span><span style="color: #E06C75"><data-lsp lsp='(property) JSX.IntrinsicElements.div: React.DetailedHTMLProps&lt;React.HTMLAttributes&lt;HTMLDivElement>, HTMLDivElement>' >div</data-lsp></span><span style="color: #ABB2BF">&gt;</span></div><div class='line'><span style="color: #ABB2BF">        &lt;/&gt;</span></div><div class='line'><span style="color: #ABB2BF">    );</span></div><div class='line'><span style="color: #ABB2BF">};</span></div></code></div></pre>`,preview:async()=>{const{Button:d}=m,{Menu:y,MenuItem:u}=D,v=["lavenderblush","ghostwhite","aliceblue","azure","honeydew","beige","oldlace","seashell","linen","mistyrose"];return()=>{const p=i.exports.useRef(null),[A,F]=i.exports.useState(!1);return o(B,{children:[s(d,{onClick:()=>{F(l=>!l)},onKeyDown:l=>{p.current&&p.current.onKeyDown(l)},children:"Toggle menu"}),s(a.div,{style:{width:200,height:220,marginTop:8,border:"1px solid #000"},children:A?s(y,{menuRef:p,onSelect:(l,r)=>{console.log(l,r)},children:v.map((l,r)=>s(u,{value:l,additionalData:r,children:l},l))}):null})]})}}})]})}}function C(n,e){throw new Error("Expected "+(e?"component":"object")+" `"+n+"` to be defined: you likely forgot to import, pass, or provide it.")}export{E as default};
