import{_ as B}from"./index.8505e53a.js";import{j as s,a as n,F as i}from"./index.b35e184b.js";import{_ as u}from"./index.ac686e12.js";import"./Popover.module.5f694bf1.js";import{_ as c}from"./index.38984032.js";function D(l={}){const{wrapper:o}=l.components||{};return o?s(o,{...l,children:s(r,{})}):r();function r(){const a=Object.assign({p:"p",code:"code",h2:"h2",a:"a"},l.components),{CodePreview:t}=a;return t||d("CodePreview",!0),n(i,{children:[n(a.p,{children:["\u0423\u0441\u0442\u0430\u043D\u043E\u0432\u0438\u0442\u0435 \u0431\u0438\u0431\u043B\u0438\u043E\u0442\u0435\u043A\u0443 ",s(a.code,{children:"@siburkit/link"})," \u0438\u0437 \u043D\u0430\u0448\u0435\u0433\u043E npm."]}),`
`,s(t,{code:`<pre class="shiki one-dark-pro" style="background-color: #282c34; color: #abb2bf"><div class="language-id">shell</div><div class='code-container'><code><div class='line'><span style="color: #ABB2BF">npm install @siburkit/link</span></div></code></div></pre>`}),`
`,s(a.h2,{children:"\u0421\u0441\u044B\u043B\u043A\u0430-\u043A\u043D\u043E\u043F\u043A\u0430"}),`
`,n(a.p,{children:[`\u0414\u043B\u044F \u0442\u043E\u0433\u043E, \u0447\u0442\u043E\u0431\u044B \u0441\u0434\u0435\u043B\u0430\u0442\u044C \u0441\u0441\u044B\u043B\u043A\u0443 \u043A\u043D\u043E\u043F\u043A\u043E\u0439, \u0434\u043E\u0441\u0442\u0430\u0442\u043E\u0447\u043D\u043E \u0434\u043E\u0431\u0430\u0432\u0438\u0442\u044C \u0430\u0442\u0440\u0438\u0431\u0443\u0442
`,s(a.code,{children:'role="button"'}),`. \u042D\u0442\u043E \u0441\u043E\u043E\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u0433\u0430\u0439\u0434\u043B\u0430\u0439\u043D\u0430\u043C
`,s(a.a,{href:"https://www.w3.org/TR/wai-aria-practices/#button",children:"WAI-ARIA Button"}),"."]}),`
`,s(t,{code:`<pre class="shiki one-dark-pro twoslash lsp" style="background-color: #282c34; color: #abb2bf" preview="true"><div class="language-id">tsx</div><div class='code-container'><code><div class='line'><span style="color: #C678DD">import</span><span style="color: #ABB2BF"> { </span><span style="color: #E06C75"><data-lsp lsp='(alias) const Link: React.ForwardRefExoticComponent&lt;LinkProps &amp; React.RefAttributes&lt;HTMLAnchorElement>>&#10;import Link' >Link</data-lsp></span><span style="color: #ABB2BF"> } </span><span style="color: #C678DD">from</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">&apos;@siburkit/link&apos;</span><span style="color: #ABB2BF">;</span></div><div class='line'><span style="color: #C678DD">import</span><span style="color: #ABB2BF"> { </span><span style="color: #E06C75"><data-lsp lsp='(alias) const PrinterIcon: Icon&#10;import PrinterIcon' >PrinterIcon</data-lsp></span><span style="color: #ABB2BF"> } </span><span style="color: #C678DD">from</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">&apos;@siburkit/icons&apos;</span><span style="color: #ABB2BF">;</span></div><div class='line'>&nbsp;</div><div class='line'><span style="color: #C678DD">export</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">default</span><span style="color: #ABB2BF"> () </span><span style="color: #C678DD">=&gt;</span><span style="color: #ABB2BF"> {</span></div><div class='line'><span style="color: #ABB2BF">    </span><span style="color: #C678DD">return</span><span style="color: #ABB2BF"> (</span></div><div class='line'><span style="color: #ABB2BF">        &lt;</span><span style="color: #E5C07B"><data-lsp lsp='(alias) const Link: React.ForwardRefExoticComponent&lt;LinkProps &amp; React.RefAttributes&lt;HTMLAnchorElement>>&#10;import Link' >Link</data-lsp></span></div><div class='line'><span style="color: #ABB2BF">            </span><span style="color: #D19A66"><data-lsp lsp='(property) React.HTMLAttributes&lt;HTMLAnchorElement>.role?: React.AriaRole | undefined' >role</data-lsp></span><span style="color: #56B6C2">=</span><span style="color: #98C379">"button"</span></div><div class='line'><span style="color: #ABB2BF">            </span><span style="color: #D19A66"><data-lsp lsp='(property) LinkProps.icon?: Icon' >icon</data-lsp></span><span style="color: #56B6C2">=</span><span style="color: #C678DD">{</span><span style="color: #E06C75"><data-lsp lsp='(alias) const PrinterIcon: Icon&#10;import PrinterIcon' >PrinterIcon</data-lsp></span><span style="color: #C678DD">}</span></div><div class='line'><span style="color: #ABB2BF">            </span><span style="color: #D19A66"><data-lsp lsp='(property) React.DOMAttributes&lt;HTMLAnchorElement>.onClick?: React.MouseEventHandler&lt;HTMLAnchorElement> | undefined' >onClick</data-lsp></span><span style="color: #56B6C2">=</span><span style="color: #C678DD">{</span><span style="color: #ABB2BF">() </span><span style="color: #C678DD">=&gt;</span><span style="color: #ABB2BF"> {</span></div><div class='line'><span style="color: #ABB2BF">                </span><span style="color: #61AFEF"><data-lsp lsp='function alert(message?: any): void' >alert</data-lsp></span><span style="color: #ABB2BF">(</span><span style="color: #98C379">&apos;\u0423\u0436\u0435 \u043F\u0435\u0447\u0430\u0442\u0430\u044E!&apos;</span><span style="color: #ABB2BF">);</span></div><div class='line'><span style="color: #ABB2BF">            }</span><span style="color: #C678DD">}</span></div><div class='line'><span style="color: #ABB2BF">        &gt;</span></div><div class='line'><span style="color: #ABB2BF">            \u0420\u0430\u0441\u043F\u0435\u0447\u0430\u0442\u0430\u0442\u044C</span></div><div class='line'><span style="color: #ABB2BF">        &lt;/</span><span style="color: #E5C07B"><data-lsp lsp='(alias) const Link: React.ForwardRefExoticComponent&lt;LinkProps &amp; React.RefAttributes&lt;HTMLAnchorElement>>&#10;import Link' >Link</data-lsp></span><span style="color: #ABB2BF">&gt;</span></div><div class='line'><span style="color: #ABB2BF">    );</span></div><div class='line'><span style="color: #ABB2BF">};</span></div></code></div></pre>`,preview:async()=>{const{Link:e}=c,{PrinterIcon:p}=u;return()=>s(e,{role:"button",icon:p,onClick:()=>{alert("\u0423\u0436\u0435 \u043F\u0435\u0447\u0430\u0442\u0430\u044E!")},children:"\u0420\u0430\u0441\u043F\u0435\u0447\u0430\u0442\u0430\u0442\u044C"})}}),`
`,s(a.h2,{children:"\u041F\u043E\u0441\u0435\u0449\u0451\u043D\u043D\u044B\u0435 \u0441\u0441\u044B\u043B\u043A\u0438"}),`
`,n(a.p,{children:[`\u041F\u043E-\u0443\u043C\u043E\u043B\u0447\u0430\u043D\u0438\u044E \u043F\u043E\u0441\u0435\u0449\u0451\u043D\u043D\u044B\u0435 \u0441\u0441\u044B\u043B\u043A\u0438 \u0438\u0437\u043C\u0435\u043D\u044F\u044E\u0442 \u0441\u0432\u043E\u0439 \u0446\u0432\u0435\u0442. \u042D\u0442\u043E \u043F\u043E\u0432\u0435\u0434\u0435\u043D\u0438\u0435 \u043C\u043E\u0436\u043D\u043E \u043F\u043E\u043C\u0435\u043D\u044F\u0442\u044C
\u0441 \u043F\u043E\u043C\u043E\u0449\u044C\u044E \u043F\u0440\u043E\u043F\u0430 `,s(a.code,{children:"disableVisited={true}"}),"."]}),`
`,s(t,{code:`<pre class="shiki one-dark-pro twoslash lsp" style="background-color: #282c34; color: #abb2bf" preview="true"><div class="language-id">tsx</div><div class='code-container'><code><div class='line'><span style="color: #C678DD">import</span><span style="color: #ABB2BF"> { </span><span style="color: #E06C75"><data-lsp lsp='(alias) const Link: React.ForwardRefExoticComponent&lt;LinkProps &amp; React.RefAttributes&lt;HTMLAnchorElement>>&#10;import Link' >Link</data-lsp></span><span style="color: #ABB2BF"> } </span><span style="color: #C678DD">from</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">&apos;@siburkit/link&apos;</span><span style="color: #ABB2BF">;</span></div><div class='line'><span style="color: #C678DD">import</span><span style="color: #ABB2BF"> { </span><span style="color: #E06C75"><data-lsp lsp='(alias) function Text({ size, weight, tag, className, children, ...rest }: TextProps): JSX.Element&#10;import Text' >Text</data-lsp></span><span style="color: #ABB2BF"> } </span><span style="color: #C678DD">from</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">&apos;@siburkit/typography&apos;</span><span style="color: #ABB2BF">;</span></div><div class='line'>&nbsp;</div><div class='line'><span style="color: #C678DD">export</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">default</span><span style="color: #ABB2BF"> () </span><span style="color: #C678DD">=&gt;</span><span style="color: #ABB2BF"> {</span></div><div class='line'><span style="color: #ABB2BF">    </span><span style="color: #C678DD">return</span><span style="color: #ABB2BF"> (</span></div><div class='line'><span style="color: #ABB2BF">        &lt;&gt;</span></div><div class='line'><span style="color: #ABB2BF">            &lt;</span><span style="color: #E5C07B"><data-lsp lsp='(alias) function Text({ size, weight, tag, className, children, ...rest }: TextProps): JSX.Element&#10;import Text' >Text</data-lsp></span><span style="color: #ABB2BF">&gt;</span></div><div class='line'><span style="color: #ABB2BF">                \u042D\u0442\u043E \u043E\u0431\u044B\u0447\u043D\u0430\u044F \u0441\u0441\u044B\u043B\u043A\u0430: &lt;</span><span style="color: #E5C07B"><data-lsp lsp='(alias) const Link: React.ForwardRefExoticComponent&lt;LinkProps &amp; React.RefAttributes&lt;HTMLAnchorElement>>&#10;import Link' >Link</data-lsp></span><span style="color: #ABB2BF"> </span><span style="color: #D19A66"><data-lsp lsp='(property) React.AnchorHTMLAttributes&lt;HTMLAnchorElement>.href?: string | undefined' >href</data-lsp></span><span style="color: #56B6C2">=</span><span style="color: #98C379">"/"</span><span style="color: #ABB2BF">&gt;\u0413\u043B\u0430\u0432\u043D\u0430\u044F \u0441\u0442\u0440\u0430\u043D\u0438\u0446\u0430&lt;/</span><span style="color: #E5C07B"><data-lsp lsp='(alias) const Link: React.ForwardRefExoticComponent&lt;LinkProps &amp; React.RefAttributes&lt;HTMLAnchorElement>>&#10;import Link' >Link</data-lsp></span><span style="color: #ABB2BF">&gt;</span></div><div class='line'><span style="color: #ABB2BF">            &lt;/</span><span style="color: #E5C07B"><data-lsp lsp='(alias) function Text({ size, weight, tag, className, children, ...rest }: TextProps): JSX.Element&#10;import Text' >Text</data-lsp></span><span style="color: #ABB2BF">&gt;</span></div><div class='line'><span style="color: #ABB2BF">            &lt;</span><span style="color: #E5C07B"><data-lsp lsp='(alias) function Text({ size, weight, tag, className, children, ...rest }: TextProps): JSX.Element&#10;import Text' >Text</data-lsp></span><span style="color: #ABB2BF">&gt;</span></div><div class='line'><span style="color: #ABB2BF">                \u0410 \u044D\u0442\u0430 \u043D\u0435 \u043C\u0435\u043D\u044F\u0435\u0442 \u0446\u0432\u0435\u0442:</span><span style="color: #C678DD">{</span><span style="color: #98C379">&apos; &apos;</span><span style="color: #C678DD">}</span></div><div class='line'><span style="color: #ABB2BF">                &lt;</span><span style="color: #E5C07B"><data-lsp lsp='(alias) const Link: React.ForwardRefExoticComponent&lt;LinkProps &amp; React.RefAttributes&lt;HTMLAnchorElement>>&#10;import Link' >Link</data-lsp></span><span style="color: #ABB2BF"> </span><span style="color: #D19A66"><data-lsp lsp='(property) React.AnchorHTMLAttributes&lt;HTMLAnchorElement>.href?: string | undefined' >href</data-lsp></span><span style="color: #56B6C2">=</span><span style="color: #98C379">"/"</span><span style="color: #ABB2BF"> </span><span style="color: #D19A66"><data-lsp lsp='(property) LinkProps.disableVisited?: boolean' >disableVisited</data-lsp></span><span style="color: #56B6C2">=</span><span style="color: #C678DD">{</span><span style="color: #D19A66">true</span><span style="color: #C678DD">}</span><span style="color: #ABB2BF">&gt;</span></div><div class='line'><span style="color: #ABB2BF">                    \u0413\u043B\u0430\u0432\u043D\u0430\u044F \u0441\u0442\u0440\u0430\u043D\u0438\u0446\u0430</span></div><div class='line'><span style="color: #ABB2BF">                &lt;/</span><span style="color: #E5C07B"><data-lsp lsp='(alias) const Link: React.ForwardRefExoticComponent&lt;LinkProps &amp; React.RefAttributes&lt;HTMLAnchorElement>>&#10;import Link' >Link</data-lsp></span><span style="color: #ABB2BF">&gt;</span></div><div class='line'><span style="color: #ABB2BF">            &lt;/</span><span style="color: #E5C07B"><data-lsp lsp='(alias) function Text({ size, weight, tag, className, children, ...rest }: TextProps): JSX.Element&#10;import Text' >Text</data-lsp></span><span style="color: #ABB2BF">&gt;</span></div><div class='line'><span style="color: #ABB2BF">        &lt;/&gt;</span></div><div class='line'><span style="color: #ABB2BF">    );</span></div><div class='line'><span style="color: #ABB2BF">};</span></div></code></div></pre>`,preview:async()=>{const{Link:e}=c,{Text:p}=B;return()=>n(i,{children:[n(p,{children:["\u042D\u0442\u043E \u043E\u0431\u044B\u0447\u043D\u0430\u044F \u0441\u0441\u044B\u043B\u043A\u0430: ",s(e,{href:"/",children:"\u0413\u043B\u0430\u0432\u043D\u0430\u044F \u0441\u0442\u0440\u0430\u043D\u0438\u0446\u0430"})]}),n(p,{children:["\u0410 \u044D\u0442\u0430 \u043D\u0435 \u043C\u0435\u043D\u044F\u0435\u0442 \u0446\u0432\u0435\u0442:"," ",s(e,{href:"/",disableVisited:!0,children:"\u0413\u043B\u0430\u0432\u043D\u0430\u044F \u0441\u0442\u0440\u0430\u043D\u0438\u0446\u0430"})]})]})}})]})}}function d(l,o){throw new Error("Expected "+(o?"component":"object")+" `"+l+"` to be defined: you likely forgot to import, pass, or provide it.")}export{D as default};
