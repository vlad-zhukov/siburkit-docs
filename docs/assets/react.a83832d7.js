import{j as s,r as B,a as y,aY as b}from"./index.7c9dff30.js";import{_ as A}from"./index.e39931ad.js";import"./Popover.module.ca2bf093.js";function F(a={}){const{wrapper:l}=a.components||{};return l?s(l,{...a,children:s(o,{})}):o();function o(){const t=Object.assign({div:"div"},a.components),{CodePreview:p}=t;return p||C("CodePreview",!0),s(p,{code:`<pre class="shiki one-dark-pro twoslash lsp" style="background-color: #282c34; color: #abb2bf" preview="true"><div class="language-id">tsx</div><div class='code-container'><code><div class='line'><span style="color: #C678DD">import</span><span style="color: #ABB2BF"> { </span><span style="color: #E06C75"><data-lsp lsp='(alias) function TabList({ selected, onSelect, onClose, className, children, ...rest }: TabListProps): JSX.Element&#10;import TabList' >TabList</data-lsp></span><span style="color: #ABB2BF">, </span><span style="color: #E06C75"><data-lsp lsp='(alias) function Tab(_props: TabProps): null&#10;import Tab' >Tab</data-lsp></span><span style="color: #ABB2BF"> } </span><span style="color: #C678DD">from</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">&apos;@siburkit/tabs&apos;</span><span style="color: #ABB2BF">;</span></div><div class='line'><span style="color: #C678DD">import</span><span style="color: #ABB2BF"> { </span><span style="color: #E06C75"><data-lsp lsp='(alias) const SunIcon: Icon&#10;import SunIcon' >SunIcon</data-lsp></span><span style="color: #ABB2BF">, </span><span style="color: #E06C75"><data-lsp lsp='(alias) const MoonIcon: Icon&#10;import MoonIcon' >MoonIcon</data-lsp></span><span style="color: #ABB2BF"> } </span><span style="color: #C678DD">from</span><span style="color: #ABB2BF"> </span><span style="color: #98C379">&apos;@siburkit/icons&apos;</span><span style="color: #ABB2BF">;</span></div><div class='line'>&nbsp;</div><div class='line'><span style="color: #C678DD">export</span><span style="color: #ABB2BF"> </span><span style="color: #C678DD">default</span><span style="color: #ABB2BF"> () </span><span style="color: #C678DD">=&gt;</span><span style="color: #ABB2BF"> {</span></div><div class='line'><span style="color: #ABB2BF">    </span><span style="color: #C678DD">const</span><span style="color: #ABB2BF"> [</span><span style="color: #E5C07B"><data-lsp lsp='const selected: string' >selected</data-lsp></span><span style="color: #ABB2BF">, </span><span style="color: #E5C07B"><data-lsp lsp='const setSelected: React.Dispatch&lt;React.SetStateAction&lt;string>>' >setSelected</data-lsp></span><span style="color: #ABB2BF">] </span><span style="color: #56B6C2">=</span><span style="color: #ABB2BF"> </span><span style="color: #E5C07B"><data-lsp lsp='(alias) namespace React&#10;import React' >React</data-lsp></span><span style="color: #ABB2BF">.</span><span style="color: #61AFEF"><data-lsp lsp='function React.useState&lt;string>(initialState: string | (() => string)): [string, React.Dispatch&lt;React.SetStateAction&lt;string>>] (+1 overload)' >useState</data-lsp></span><span style="color: #ABB2BF">(</span><span style="color: #98C379">&apos;sun&apos;</span><span style="color: #ABB2BF">);</span></div><div class='line'>&nbsp;</div><div class='line'><span style="color: #ABB2BF">    </span><span style="color: #C678DD">return</span><span style="color: #ABB2BF"> (</span></div><div class='line'><span style="color: #ABB2BF">        &lt;</span><span style="color: #E06C75"><data-lsp lsp='(property) JSX.IntrinsicElements.div: React.DetailedHTMLProps&lt;React.HTMLAttributes&lt;HTMLDivElement>, HTMLDivElement>' >div</data-lsp></span><span style="color: #ABB2BF"> </span><span style="color: #D19A66"><data-lsp lsp='(property) React.HTMLAttributes&lt;HTMLDivElement>.style?: React.CSSProperties | undefined' >style</data-lsp></span><span style="color: #56B6C2">=</span><span style="color: #C678DD">{</span><span style="color: #ABB2BF">{ </span><span style="color: #E06C75"><data-lsp lsp='(property) StandardLonghandProperties&lt;string | number, string &amp; {}>.width?: Property.Width&lt;string | number> | undefined' >width</data-lsp></span><span style="color: #ABB2BF">: </span><span style="color: #98C379">&apos;100%&apos;</span><span style="color: #ABB2BF"> }</span><span style="color: #C678DD">}</span><span style="color: #ABB2BF">&gt;</span></div><div class='line'><span style="color: #ABB2BF">            &lt;</span><span style="color: #E5C07B"><data-lsp lsp='(alias) function TabList({ selected, onSelect, onClose, className, children, ...rest }: TabListProps): JSX.Element&#10;import TabList' >TabList</data-lsp></span></div><div class='line'><span style="color: #ABB2BF">                </span><span style="color: #D19A66"><data-lsp lsp='(property) TabListProps.selected: string' >selected</data-lsp></span><span style="color: #56B6C2">=</span><span style="color: #C678DD">{</span><span style="color: #E06C75"><data-lsp lsp='const selected: string' >selected</data-lsp></span><span style="color: #C678DD">}</span></div><div class='line'><span style="color: #ABB2BF">                </span><span style="color: #D19A66"><data-lsp lsp='(method) TabListProps.onSelect(tabId: string): void' >onSelect</data-lsp></span><span style="color: #56B6C2">=</span><span style="color: #C678DD">{</span><span style="color: #E06C75"><data-lsp lsp='const setSelected: React.Dispatch&lt;React.SetStateAction&lt;string>>' >setSelected</data-lsp></span><span style="color: #C678DD">}</span></div><div class='line'><span style="color: #ABB2BF">                </span><span style="color: #D19A66"><data-lsp lsp='(method) TabListProps.onClose?(tabId: string): void' >onClose</data-lsp></span><span style="color: #56B6C2">=</span><span style="color: #C678DD">{</span><span style="color: #ABB2BF">() </span><span style="color: #C678DD">=&gt;</span><span style="color: #ABB2BF"> {}</span><span style="color: #C678DD">}</span></div><div class='line'><span style="color: #ABB2BF">            &gt;</span></div><div class='line'><span style="color: #ABB2BF">                &lt;</span><span style="color: #E5C07B"><data-lsp lsp='(alias) function Tab(_props: TabProps): null&#10;import Tab' >Tab</data-lsp></span><span style="color: #ABB2BF"> </span><span style="color: #D19A66"><data-lsp lsp='(property) TabProps.id: string' >id</data-lsp></span><span style="color: #56B6C2">=</span><span style="color: #98C379">"sun"</span><span style="color: #ABB2BF"> </span><span style="color: #D19A66"><data-lsp lsp='(property) TabProps.label: string' >label</data-lsp></span><span style="color: #56B6C2">=</span><span style="color: #98C379">"Sun"</span><span style="color: #ABB2BF"> </span><span style="color: #D19A66"><data-lsp lsp='(property) TabProps.icon?: Icon | undefined' >icon</data-lsp></span><span style="color: #56B6C2">=</span><span style="color: #C678DD">{</span><span style="color: #E06C75"><data-lsp lsp='(alias) const SunIcon: Icon&#10;import SunIcon' >SunIcon</data-lsp></span><span style="color: #C678DD">}</span><span style="color: #ABB2BF"> /&gt;</span></div><div class='line'><span style="color: #ABB2BF">                &lt;</span><span style="color: #E5C07B"><data-lsp lsp='(alias) function Tab(_props: TabProps): null&#10;import Tab' >Tab</data-lsp></span><span style="color: #ABB2BF"> </span><span style="color: #D19A66"><data-lsp lsp='(property) TabProps.id: string' >id</data-lsp></span><span style="color: #56B6C2">=</span><span style="color: #98C379">"moon"</span><span style="color: #ABB2BF"> </span><span style="color: #D19A66"><data-lsp lsp='(property) TabProps.label: string' >label</data-lsp></span><span style="color: #56B6C2">=</span><span style="color: #98C379">"Moon"</span><span style="color: #ABB2BF"> </span><span style="color: #D19A66"><data-lsp lsp='(property) TabProps.icon?: Icon | undefined' >icon</data-lsp></span><span style="color: #56B6C2">=</span><span style="color: #C678DD">{</span><span style="color: #E06C75"><data-lsp lsp='(alias) const MoonIcon: Icon&#10;import MoonIcon' >MoonIcon</data-lsp></span><span style="color: #C678DD">}</span><span style="color: #ABB2BF"> /&gt;</span></div><div class='line'><span style="color: #ABB2BF">                &lt;</span><span style="color: #E5C07B"><data-lsp lsp='(alias) function Tab(_props: TabProps): null&#10;import Tab' >Tab</data-lsp></span><span style="color: #ABB2BF"> </span><span style="color: #D19A66"><data-lsp lsp='(property) TabProps.id: string' >id</data-lsp></span><span style="color: #56B6C2">=</span><span style="color: #98C379">"tab3"</span><span style="color: #ABB2BF"> </span><span style="color: #D19A66"><data-lsp lsp='(property) TabProps.label: string' >label</data-lsp></span><span style="color: #56B6C2">=</span><span style="color: #98C379">"Tab"</span><span style="color: #ABB2BF"> </span><span style="color: #D19A66"><data-lsp lsp='(property) TabProps.badge?: string | undefined' >badge</data-lsp></span><span style="color: #56B6C2">=</span><span style="color: #98C379">"0"</span><span style="color: #ABB2BF"> /&gt;</span></div><div class='line'><span style="color: #ABB2BF">            &lt;/</span><span style="color: #E5C07B"><data-lsp lsp='(alias) function TabList({ selected, onSelect, onClose, className, children, ...rest }: TabListProps): JSX.Element&#10;import TabList' >TabList</data-lsp></span><span style="color: #ABB2BF">&gt;</span></div><div class='line'><span style="color: #ABB2BF">        &lt;/</span><span style="color: #E06C75"><data-lsp lsp='(property) JSX.IntrinsicElements.div: React.DetailedHTMLProps&lt;React.HTMLAttributes&lt;HTMLDivElement>, HTMLDivElement>' >div</data-lsp></span><span style="color: #ABB2BF">&gt;</span></div><div class='line'><span style="color: #ABB2BF">    );</span></div><div class='line'><span style="color: #ABB2BF">};</span></div></code></div></pre>`,preview:async()=>{const{TabList:e,Tab:n}=b,{SunIcon:r,MoonIcon:c}=A;return()=>{const[i,d]=B.exports.useState("sun");return s(t.div,{style:{width:"100%"},children:y(e,{selected:i,onSelect:d,onClose:()=>{},children:[s(n,{id:"sun",label:"Sun",icon:r}),s(n,{id:"moon",label:"Moon",icon:c}),s(n,{id:"tab3",label:"Tab",badge:"0"})]})})}}})}}function C(a,l){throw new Error("Expected "+(l?"component":"object")+" `"+a+"` to be defined: you likely forgot to import, pass, or provide it.")}export{F as default};
